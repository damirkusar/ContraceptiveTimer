package ch.kusar.contraceptivetimer.wrapper;

import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;

public class CalendarWrapper {

	private static GregorianCalendar getActualCalendar() {
		return (GregorianCalendar) GregorianCalendar.getInstance(TimeZone.getDefault());
	}

	public static GregorianCalendar getActualCalendarWithoutHourMinutesSeconds() {
		new GregorianCalendar();
		return CalendarWrapper
				.convertToCalendarWithoutHourMinutesSeconds(GregorianCalendar.getInstance());
	}

	public static GregorianCalendar convertToCalendarWithoutHourMinutesSeconds(
			Calendar calendar) {
		Calendar cal = calendar;

		cal.set(Calendar.HOUR_OF_DAY, 0);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);

		return (GregorianCalendar) cal;
	}

//	public static GregorianCalendar getTomorrowCalendarWithoutHourMinutesSeconds() {
//		Calendar calendar = CalendarWrapper.getActualCalendar();
//		calendar.set(Calendar.DAY_OF_YEAR,
//				calendar.get(Calendar.DAY_OF_YEAR) + 1);
//
//		return CalendarWrapper
//				.convertToCalendarWithoutHourMinutesSeconds(calendar);
//	}
//
//	public static GregorianCalendar getOneWeekLaterCalendarWithoutHourMinutesSeconds() {
//		Calendar calendar = CalendarWrapper.getActualCalendar();
//		calendar.set(Calendar.DAY_OF_YEAR,
//				calendar.get(Calendar.DAY_OF_YEAR) + 7);
//
//		return CalendarWrapper
//				.convertToCalendarWithoutHourMinutesSeconds(calendar);
//	}
//
//	public static GregorianCalendar getThreeWeeksLaterCalendarWithoutHourMinutesSeconds() {
//		Calendar calendar = CalendarWrapper.getActualCalendar();
//		calendar.set(Calendar.DAY_OF_YEAR,
//				calendar.get(Calendar.DAY_OF_YEAR) + 21);
//
//		return CalendarWrapper
//				.convertToCalendarWithoutHourMinutesSeconds(calendar);
//	}
//
//	public static int getTodaysDayOfYear() {
//		return CalendarWrapper.getActualCalendar().get(Calendar.DAY_OF_YEAR);
//	}
}
