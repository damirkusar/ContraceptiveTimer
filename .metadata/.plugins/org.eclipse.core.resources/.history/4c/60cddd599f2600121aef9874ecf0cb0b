package ch.kusar.contraceptivetimer;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.widget.Toast;
import ch.kusar.contraceptivetimer.businessobjects.LicenseStatus;
import ch.kusar.contraceptivetimer.wrapper.InternalStorageWrapper;
import ch.kusar.contraceptivetimer.wrapper.LoggerWrapper;

import com.google.android.vending.licensing.LicenseChecker;
import com.google.android.vending.licensing.LicenseCheckerCallback;

/**
 * NOTES ON USING THIS LICENSE FILE IN YOUR APPLICATION: 1. Define the package
 * of you application above 2. Be sure your public key is set properly @BASE64_PUBLIC_KEY
 * 3. Change your SALT using random digits 4. Under AllowAccess, Add your
 * previously used MainActivity 5. Add this activity to your manifest and set
 * intent filters to MAIN and LAUNCHER 6. Remove Intent Filters from previous
 * main activity
 */
public class LicenseCheck extends Activity {
	private LicenseChecker mChecker;
	// A handler on the UI thread.
	public LicenseCheckerCallback mLicenseCheckerCallback;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		LoggerWrapper.LogInfo("Starting LicenseCheck Activity!!!");

		boolean isPaid = this.getLicenseStatus();
		if (isPaid) {
			this.startMainActivity();
		} else {
			this.doCheck();
		}
	}

	@Override
	protected Dialog onCreateDialog(int id) {
		// We have only one dialog.
		return new AlertDialog.Builder(this).setTitle("Application Not Licensed").setCancelable(false)
				.setMessage("This application is not licensed. Please purchase it from Android Market")
				.setPositiveButton("Buy App", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {
						Intent marketIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("http://market.android.com/details?id="
								+ LicenseCheck.this.getPackageName()));
						LicenseCheck.this.startActivity(marketIntent);
						LicenseCheck.this.finish();
					}
				}).setNegativeButton("Exit", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {
						LicenseCheck.this.finish();
					}
				}).create();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		this.mChecker.onDestroy();
	}

	private void doCheck() {
		LoggerWrapper.LogInfo("Checking LicenseStatus!!!");
		this.mChecker.checkAccess(this.mLicenseCheckerCallback);
	}

	private void updateLicenseStatus() {
		LoggerWrapper.LogInfo("Updating LicenseStatus!!!");
		InternalStorageWrapper internalStorageWrapper = new InternalStorageWrapper(this.getApplicationContext());
		internalStorageWrapper.saveToStorage(new LicenseStatus(true));
	}

	private boolean getLicenseStatus() {
		LoggerWrapper.LogInfo("Getting LicenseStatus!!!");
		InternalStorageWrapper internalStorageWrapper = new InternalStorageWrapper(this.getApplicationContext());
		LicenseStatus ls = internalStorageWrapper.loadLicenseFileFromStorage();
		if (ls == null) {
			return false;
		} else {
			return ls.isPaid();
		}
	}

	private void startMainActivity() {
		LoggerWrapper.LogInfo("Starting HomeScreenActivity!!!");
		this.startActivity(new Intent(this, HomeScreenActivity.class));
	}

	public void toast(String string) {
		Toast.makeText(this, string, Toast.LENGTH_SHORT).show();
	}

	public class MyLicenseCheckerCallBack implements LicenseCheckerCallback {

		public void allow(int reason) {
			LoggerWrapper.LogInfo("Allowing License: " + reason);
			if (LicenseCheck.this.isFinishing()) {
				// Don't update UI if Activity is finishing.
				return;
			}

			// Should allow user access.
			LicenseCheck.this.updateLicenseStatus();
			LicenseCheck.this.startMainActivity();
		}

		@SuppressWarnings("deprecation")
		public void dontAllow(int reason) {
			LoggerWrapper.LogInfo("Dont Allowing License: " + reason);
			if (LicenseCheck.this.isFinishing()) {
				// Don't update UI if Activity is finishing.
				return;
			}

			// Should not allow access. In most cases, the app should assume
			// the user has access unless it encounters this. If it does,
			// the app should inform the user of their unlicensed ways
			// and then either shut down the app or limit the user to a
			// restricted set of features.
			// In this example, we show a dialog that takes the user to Market.
			LicenseCheck.this.showDialog(0);
		}

		public void applicationError(int errorCode) {
			LoggerWrapper.LogInfo("Error License: " + errorCode);
			if (LicenseCheck.this.isFinishing()) {
				// Don't update UI if Activity is finishing.
				return;
			}
			// This is a polite way of saying the developer made a mistake
			// while setting up or calling the license checker library.
			// Please examine the error code and fix the error.
			LicenseCheck.this.toast("Please report ERROR to developer: " + errorCode);
			LicenseCheck.this.startMainActivity();
		}
	}
}