package ch.kusar.contraceptivetimer.wrapper;

import java.util.Calendar;
import java.util.GregorianCalendar;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import ch.kusar.contraceptivetimer.MainApplicationContext;
import ch.kusar.contraceptivetimer.businessobjects.AlarmEventData;
import ch.kusar.contraceptivetimer.businessobjects.EventType;
import ch.kusar.contraceptivetimer.retriever.AlarmEventRetriever;

public class AlarmManagerWrapper extends BroadcastReceiver {

	@Override
	public void onReceive(Context context, Intent intent) {
		LoggerWrapper.LogDebug("ContraceptiveTimer is now in onReceive Method of the AlarmManagerWrapper to handle the Event.");

		Bundle bundle = intent.getExtras();
		long alarmTimeinMilliSeconds = bundle.getLong(AlarmEventData.getIntentNameAlarmInMilliseconds());
		EventType eventType = (EventType) bundle.get(AlarmEventData.getIntentNameEventType());
		String alarmMessage = bundle.getString(AlarmEventData.getIntentNameAlarMmessage());


		LoggerWrapper.LogDebug(alarmEventData.toString());
		this.createNotification(context, alarmMessage);

		InternalStorageWrapper internalStorageWrapper = new InternalStorageWrapper(MainApplicationContext.getAppContext());

		if (alarmEventData.getEventType() == EventType.EVENT_CHANGE || alarmEventData.getEventType() == EventType.EVENT_AFTER_BREAK) {
			internalStorageWrapper.saveUpdatedLastUseOfContraceptionToStorage(CalendarWrapper.getTodayAsDayOfYear());
		} else {
			internalStorageWrapper.saveUpdatedLastBreakOfContraceptionToStorage(CalendarWrapper.getTodayAsDayOfYear());
		}

		// TODO: use it when beta test.
		// this.SetAlarm();
	}

	public void SetAlarm() {
		Context context = MainApplicationContext.getAppContext();

		LoggerWrapper.LogDebug("ContraceptiveTimer is now retrieving EventData.");

		AlarmEventRetriever alarmEventRetriever = new AlarmEventRetriever();
		AlarmEventData alarmEventData = alarmEventRetriever.retrieveAlarmEventData();
		LoggerWrapper.LogDebug(alarmEventData.toString());

		if (alarmEventData != null) {
			LoggerWrapper.LogDebug("ContraceptiveTimer is now trying to setup alarm from file..");

			AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);

			Intent intent = new Intent(context, AlarmManagerWrapper.class);
			intent.putExtra(AlarmEventData.getIntentNameAlarmInMilliseconds(), alarmEventData.getAlarmTimeInMilliSeconds());
			intent.putExtra(AlarmEventData.getIntentNameAlarMmessage(), alarmEventData.getAlarmMessage());
			intent.putExtra(AlarmEventData.getIntentNameEventType(), alarmEventData.getEventType());

			PendingIntent pi = PendingIntent.getBroadcast(context, 0, intent, 0);
			// TODO: Comment it in.
			// am.set(AlarmManager.RTC_WAKEUP,
			// alarmEventData.getAlarmTimeInMilliSeconds(), pi);

			// TODO: For Tests, remove it.
			GregorianCalendar gregorianCalendar = (GregorianCalendar) Calendar.getInstance();
			gregorianCalendar.add(Calendar.SECOND, 5);
			am.set(AlarmManager.RTC_WAKEUP, gregorianCalendar.getTimeInMillis(), pi);
			LoggerWrapper.LogDebug("ContraceptiveTimer is now finishing the setAlarm Method.");
		} else {
			LoggerWrapper.LogDebug("ContraceptiveTimer Alarm not set.");
		}
	}

	public void CancelAlarm() {
		LoggerWrapper.LogDebug("ContraceptiveTimer canceling alarm.");

		Context context = MainApplicationContext.getAppContext();

		Intent intent = new Intent(context, AlarmManagerWrapper.class);
		PendingIntent sender = PendingIntent.getBroadcast(context, 0, intent, 0);
		AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
		alarmManager.cancel(sender);
	}
}
