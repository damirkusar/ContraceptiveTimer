package ch.kusar.contraceptivetimer.dialog;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.view.LayoutInflater;
import ch.kusar.contraceptivetimer.R;

public class CancelDialog extends DialogFragment {

	@Override
	public Dialog onCreateDialog(Bundle savedInstanceState) {
		AlertDialog.Builder builder = new AlertDialog.Builder(this.getActivity());

		LayoutInflater layoutInflater = this.getActivity().getLayoutInflater();
		builder.setView(layoutInflater.inflate(R.layout.dialog_cancel, null));

		builder.setPositiveButton(R.string.cancelDialog_yes, new DialogInterface.OnClickListener() {
			public void onClick(DialogInterface dialog, int id) {

			}
		});
		builder.setNegativeButton(R.string.cancelDialog_no, new DialogInterface.OnClickListener() {
			public void onClick(DialogInterface dialog, int id) {
				dialog.cancel();
			}
		});
		// Create the AlertDialog object and return it
		return builder.create();
	}
	
	/* The activity that creates an instance of this dialog fragment must
     * implement this interface in order to receive event callbacks.
     * Each method passes the DialogFragment in case the host needs to query it. */
    public interface NoticeDialogListener {
        public void onDialogPositiveClick(DialogFragment dialog);
        public void onDialogNegativeClick(DialogFragment dialog);
    }
    
    // Use this instance of the interface to deliver action events
    static NoticeDialogListener mListener;
        
    /* Call this to instantiate a new NoticeDialog.
     * @param activity  The activity hosting the dialog, which must implement the
     *                  NoticeDialogListener to receive event callbacks.
     * @returns A new instance of NoticeDialog.
     * @throws  ClassCastException if the host activity does not
     *          implement NoticeDialogListener
     */
    public static CancelDialog newInstance(Activity activity) {
        // Verify that the host activity implements the callback interface
        try {
            // Instantiate the NoticeDialogListener so we can send events with it
            mListener = (NoticeDialogListener) activity;
        } catch (ClassCastException e) {
            // The activity doesn't implement the interface, throw exception
            throw new ClassCastException(activity.toString()
                    + " must implement NoticeDialogListener");
        }
        CancelDialog frag = new CancelDialog();
        return frag;
    }
}
